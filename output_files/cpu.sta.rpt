TimeQuest Timing Analyzer report for cpu
Mon Jul 02 16:03:10 2018
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Hold: 'clk'
 13. Slow Model Minimum Pulse Width: 'clk'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clk'
 24. Fast Model Hold: 'clk'
 25. Fast Model Minimum Pulse Width: 'clk'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; cpu                                                ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C35F672C6                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 373.97 MHz ; 373.97 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -1.674 ; -114.106      ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.391 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.222 ; -103.222              ;
+-------+--------+-----------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                      ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; -1.674 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.692      ;
; -1.674 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.692      ;
; -1.623 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.640      ;
; -1.623 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.640      ;
; -1.623 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.640      ;
; -1.529 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[0]      ; clk          ; clk         ; 1.000        ; 0.024      ; 2.589      ;
; -1.529 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[1]      ; clk          ; clk         ; 1.000        ; 0.024      ; 2.589      ;
; -1.529 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[2]      ; clk          ; clk         ; 1.000        ; 0.024      ; 2.589      ;
; -1.529 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[3]      ; clk          ; clk         ; 1.000        ; 0.024      ; 2.589      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.528 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.335      ;
; -1.522 ; dp:datapath|entrada2_alu[0]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.558      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[1] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.494 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.533      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.483 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.229     ; 2.290      ;
; -1.479 ; dp:datapath|entrada1_alu[0]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.515      ;
; -1.475 ; ctrl:controller|select_OP[1] ; display_hex2[4]~reg0           ; clk          ; clk         ; 1.000        ; -0.033     ; 2.478      ;
; -1.466 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.484      ;
; -1.466 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.484      ;
; -1.459 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|state.s3       ; clk          ; clk         ; 1.000        ; 0.000      ; 2.495      ;
; -1.456 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.473      ;
; -1.456 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.473      ;
; -1.456 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.473      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[1] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.449 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.003      ; 2.488      ;
; -1.428 ; ctrl:controller|imm[3]       ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.023      ; 2.487      ;
; -1.427 ; ctrl:controller|select_OP[0] ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.004      ; 2.467      ;
; -1.423 ; ctrl:controller|state.s3     ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.440      ;
; -1.423 ; ctrl:controller|state.s3     ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.440      ;
; -1.423 ; ctrl:controller|state.s3     ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.440      ;
; -1.410 ; dp:datapath|entrada2_alu[1]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.232      ; 2.678      ;
; -1.405 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 1.000        ; -0.056     ; 2.385      ;
; -1.405 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 1.000        ; -0.056     ; 2.385      ;
; -1.405 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[2]     ; clk          ; clk         ; 1.000        ; -0.056     ; 2.385      ;
; -1.405 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[3]     ; clk          ; clk         ; 1.000        ; -0.056     ; 2.385      ;
; -1.403 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.421      ;
; -1.403 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.018     ; 2.421      ;
; -1.399 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|state.s3       ; clk          ; clk         ; 1.000        ; 0.000      ; 2.435      ;
; -1.396 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.454      ;
; -1.396 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.454      ;
; -1.396 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.454      ;
; -1.396 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.454      ;
; -1.389 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.406      ;
; -1.389 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.406      ;
; -1.389 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.019     ; 2.406      ;
; -1.389 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.368      ;
; -1.389 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.368      ;
; -1.389 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[2]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.368      ;
; -1.389 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[3]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.368      ;
; -1.371 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 1.000        ; -0.039     ; 2.368      ;
; -1.371 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 1.000        ; -0.039     ; 2.368      ;
; -1.371 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.179      ;
; -1.371 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 1.000        ; -0.039     ; 2.368      ;
; -1.371 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[3]     ; clk          ; clk         ; 1.000        ; -0.039     ; 2.368      ;
; -1.371 ; dp:datapath|entrada1_alu[1]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.232      ; 2.639      ;
; -1.370 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.178      ;
; -1.366 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.174      ;
; -1.353 ; ctrl:controller|imm[0]       ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 1.000        ; 0.023      ; 2.412      ;
; -1.346 ; ctrl:controller|imm[0]       ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.023      ; 2.405      ;
; -1.343 ; dp:datapath|entrada1_alu[2]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.232      ; 2.611      ;
; -1.326 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[0]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.400      ;
; -1.326 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[1]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.400      ;
; -1.326 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[2]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.400      ;
; -1.326 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[3]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.400      ;
; -1.326 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.384      ;
; -1.326 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.384      ;
; -1.326 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.384      ;
; -1.326 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 1.000        ; 0.022      ; 2.384      ;
; -1.314 ; dp:datapath|entrada2_alu[0]  ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.350      ;
; -1.304 ; dp:datapath|entrada2_alu[2]  ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.232      ; 2.572      ;
; -1.302 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.281      ;
; -1.302 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.281      ;
; -1.302 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.281      ;
; -1.302 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[3]     ; clk          ; clk         ; 1.000        ; -0.057     ; 2.281      ;
; -1.294 ; ctrl:controller|select_OP[0] ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.004      ; 2.334      ;
; -1.289 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[0]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.363      ;
; -1.289 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[1]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.363      ;
; -1.289 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[2]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.363      ;
; -1.289 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[3]     ; clk          ; clk         ; 1.000        ; 0.038      ; 2.363      ;
; -1.276 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.084      ;
; -1.276 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.084      ;
; -1.276 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.228     ; 2.084      ;
; -1.275 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|state.s1       ; clk          ; clk         ; 1.000        ; -0.032     ; 2.279      ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                        ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; ctrl:controller|state.done     ; ctrl:controller|state.done     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; ctrl:controller|state.s0       ; ctrl:controller|state.s0       ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; ctrl:controller|select_OP[0]   ; ctrl:controller|select_OP[0]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; ctrl:controller|enable_RF      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.523 ; ctrl:controller|state.s1       ; ctrl:controller|state.s2       ; clk          ; clk         ; 0.000        ; 0.000      ; 0.789      ;
; 0.550 ; ctrl:controller|PC[2]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.815      ;
; 0.557 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[3]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.822      ;
; 0.559 ; ctrl:controller|PC[2]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.824      ;
; 0.560 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.825      ;
; 0.561 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.826      ;
; 0.565 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[1]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.830      ;
; 0.600 ; ctrl:controller|state.s0       ; ctrl:controller|state.s1       ; clk          ; clk         ; 0.000        ; 0.196      ; 1.062      ;
; 0.686 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.951      ;
; 0.686 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.951      ;
; 0.686 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[1]      ; clk          ; clk         ; 0.000        ; -0.001     ; 0.951      ;
; 0.688 ; ctrl:controller|PC[1]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.953      ;
; 0.689 ; ctrl:controller|PC[1]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.954      ;
; 0.690 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 0.000        ; -0.021     ; 0.935      ;
; 0.725 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 0.000        ; -0.021     ; 0.970      ;
; 0.735 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 0.000        ; -0.021     ; 0.980      ;
; 0.736 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 0.000        ; -0.021     ; 0.981      ;
; 0.783 ; ctrl:controller|state.s3       ; ctrl:controller|imm[3]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.030      ;
; 0.787 ; ctrl:controller|state.s3       ; ctrl:controller|imm[1]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.034      ;
; 0.789 ; ctrl:controller|state.s3       ; ctrl:controller|imm[0]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.036      ;
; 0.790 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[3]     ; clk          ; clk         ; 0.000        ; -0.001     ; 1.055      ;
; 0.793 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; -0.001     ; 1.058      ;
; 0.809 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; -0.001     ; 1.074      ;
; 0.836 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; -0.001     ; 1.101      ;
; 0.836 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; -0.001     ; 1.101      ;
; 0.844 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out0[2]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.105      ;
; 0.846 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out2[2]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.107      ;
; 0.867 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out0[0]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.128      ;
; 0.868 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out2[0]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.129      ;
; 0.876 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out0[1]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.137      ;
; 0.879 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out2[1]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.140      ;
; 0.924 ; dp:datapath|rf:rf1|out3[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.081      ; 1.271      ;
; 0.937 ; ctrl:controller|OPCODE[1]      ; ctrl:controller|select_OP[1]   ; clk          ; clk         ; 0.000        ; 0.001      ; 1.204      ;
; 0.952 ; dp:datapath|rf:rf1|out1[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.020      ; 1.238      ;
; 0.958 ; ctrl:controller|OPCODE[0]      ; ctrl:controller|select_OP[0]   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.224      ;
; 0.962 ; ctrl:controller|ADDRESS[0]     ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 0.000        ; -0.018     ; 1.210      ;
; 0.973 ; dp:datapath|rf:rf1|out0[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.243      ;
; 0.974 ; dp:datapath|rf:rf1|out0[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.244      ;
; 0.975 ; ctrl:controller|PC[2]          ; ctrl:controller|PC[2]          ; clk          ; clk         ; 0.000        ; 0.000      ; 1.241      ;
; 0.977 ; dp:datapath|rf:rf1|out0[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.247      ;
; 0.985 ; dp:datapath|alu:alu1|output[0] ; dp:datapath|entrada_rf[0]      ; clk          ; clk         ; 0.000        ; 0.021      ; 1.272      ;
; 0.991 ; dp:datapath|rf:rf1|out1[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.020      ; 1.277      ;
; 0.995 ; dp:datapath|entrada_acc[0]     ; dp:datapath|acc:acc1|output[0] ; clk          ; clk         ; 0.000        ; -0.005     ; 1.256      ;
; 1.012 ; dp:datapath|entrada_acc[3]     ; dp:datapath|acc:acc1|output[3] ; clk          ; clk         ; 0.000        ; -0.005     ; 1.273      ;
; 1.014 ; dp:datapath|rf:rf1|out2[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.284      ;
; 1.034 ; ctrl:controller|select_OP[0]   ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 0.000        ; 0.004      ; 1.304      ;
; 1.041 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 0.000        ; -0.082     ; 1.225      ;
; 1.049 ; dp:datapath|rf:rf1|out2[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.319      ;
; 1.051 ; dp:datapath|rf:rf1|out3[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.081      ; 1.398      ;
; 1.059 ; ctrl:controller|ADDRESS[1]     ; ctrl:controller|imm[1]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.306      ;
; 1.065 ; ctrl:controller|ADDRESS[3]     ; ctrl:controller|imm[3]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.312      ;
; 1.075 ; ctrl:controller|ADDRESS[3]     ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 0.000        ; -0.018     ; 1.323      ;
; 1.078 ; dp:datapath|alu:alu1|output[1] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 0.000        ; -0.060     ; 1.284      ;
; 1.083 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 0.000        ; -0.082     ; 1.267      ;
; 1.085 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out2[3]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.346      ;
; 1.088 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out0[3]     ; clk          ; clk         ; 0.000        ; -0.005     ; 1.349      ;
; 1.091 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 0.000        ; -0.082     ; 1.275      ;
; 1.098 ; dp:datapath|rf:rf1|out0[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.004      ; 1.368      ;
; 1.106 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|select_OP[1]   ; clk          ; clk         ; 0.000        ; 0.001      ; 1.373      ;
; 1.110 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|select_OP[3]   ; clk          ; clk         ; 0.000        ; 0.001      ; 1.377      ;
; 1.122 ; ctrl:controller|select_OP[3]   ; display_hex3[2]~reg0           ; clk          ; clk         ; 0.000        ; -0.058     ; 1.330      ;
; 1.124 ; ctrl:controller|select_OP[3]   ; display_hex3[0]~reg0           ; clk          ; clk         ; 0.000        ; -0.058     ; 1.332      ;
; 1.125 ; ctrl:controller|select_RF[0]   ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.042      ; 1.433      ;
; 1.129 ; dp:datapath|alu:alu1|output[2] ; dp:datapath|entrada_rf[2]      ; clk          ; clk         ; 0.000        ; 0.021      ; 1.416      ;
; 1.141 ; dp:datapath|entrada_acc[1]     ; dp:datapath|acc:acc1|output[1] ; clk          ; clk         ; 0.000        ; -0.005     ; 1.402      ;
; 1.146 ; dp:datapath|alu:alu1|output[3] ; dp:datapath|entrada_rf[3]      ; clk          ; clk         ; 0.000        ; 0.021      ; 1.433      ;
; 1.146 ; ctrl:controller|select_OP[1]   ; display_hex0[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.380      ;
; 1.148 ; dp:datapath|entrada_acc[2]     ; dp:datapath|acc:acc1|output[2] ; clk          ; clk         ; 0.000        ; -0.213     ; 1.201      ;
; 1.153 ; ctrl:controller|select_OP[1]   ; display_hex1[5]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.387      ;
; 1.155 ; ctrl:controller|select_OP[1]   ; display_hex1[4]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.389      ;
; 1.158 ; dp:datapath|entrada2_alu[2]    ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 0.000        ; 0.232      ; 1.656      ;
; 1.158 ; ctrl:controller|select_OP[1]   ; display_hex1[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.392      ;
; 1.159 ; ctrl:controller|select_OP[1]   ; display_hex1[0]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.393      ;
; 1.161 ; dp:datapath|rf:rf1|out3[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.081      ; 1.508      ;
; 1.169 ; ctrl:controller|OPCODE[1]      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.435      ;
; 1.173 ; dp:datapath|acc:acc1|output[2] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 0.000        ; 0.041      ; 1.480      ;
; 1.187 ; ctrl:controller|state.s2       ; ctrl:controller|PC[1]          ; clk          ; clk         ; 0.000        ; 0.033      ; 1.486      ;
; 1.188 ; ctrl:controller|state.s2       ; ctrl:controller|PC[0]          ; clk          ; clk         ; 0.000        ; 0.033      ; 1.487      ;
; 1.199 ; ctrl:controller|imm[0]         ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 0.000        ; 0.023      ; 1.488      ;
; 1.202 ; dp:datapath|alu:alu1|output[0] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 0.000        ; -0.060     ; 1.408      ;
; 1.210 ; ctrl:controller|select_OP[3]   ; display_hex3[5]~reg0           ; clk          ; clk         ; 0.000        ; -0.033     ; 1.443      ;
; 1.214 ; dp:datapath|rf:rf1|out3[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.081      ; 1.561      ;
; 1.232 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 1.498      ;
; 1.234 ; dp:datapath|entrada2_alu[0]    ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.500      ;
; 1.239 ; ctrl:controller|state.s2       ; ctrl:controller|state.s3       ; clk          ; clk         ; 0.000        ; 0.032      ; 1.537      ;
; 1.248 ; ctrl:controller|select_RF[1]   ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.042      ; 1.556      ;
; 1.248 ; ctrl:controller|select_RF[1]   ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.042      ; 1.556      ;
; 1.250 ; ctrl:controller|ADDRESS[0]     ; ctrl:controller|imm[0]         ; clk          ; clk         ; 0.000        ; -0.019     ; 1.497      ;
; 1.252 ; ctrl:controller|select_OP[3]   ; display_hex3[4]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.486      ;
; 1.257 ; ctrl:controller|select_OP[3]   ; display_hex3[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.491      ;
; 1.263 ; ctrl:controller|OPCODE[0]      ; ctrl:controller|state.done     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.529      ;
; 1.269 ; ctrl:controller|select_RF[0]   ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.042      ; 1.577      ;
; 1.281 ; dp:datapath|entrada2_alu[3]    ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 0.000        ; 0.232      ; 1.779      ;
; 1.282 ; dp:datapath|entrada2_alu[1]    ; dp:datapath|alu:alu1|output[1] ; clk          ; clk         ; 0.000        ; 0.232      ; 1.780      ;
; 1.289 ; ctrl:controller|select_OP[3]   ; display_hex0[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.032     ; 1.523      ;
; 1.296 ; dp:datapath|alu:alu1|output[2] ; dp:datapath|entrada_acc[2]     ; clk          ; clk         ; 0.000        ; -0.060     ; 1.502      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                         ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[1]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[1]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[2]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[2]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[6]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[6]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|enable_RF    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|enable_RF    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_RF[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_RF[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_RF[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_RF[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.done   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.done   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s0     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s0     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s1     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s1     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s2     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s2     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s3     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s3     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[3]~reg0         ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; rst       ; clk        ; 1.609 ; 1.609 ; Rise       ; clk             ;
; start     ; clk        ; 4.620 ; 4.620 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst       ; clk        ; 0.534  ; 0.534  ; Rise       ; clk             ;
; start     ; clk        ; -3.918 ; -3.918 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------+
; Clock to Output Times                                                            ;
+--------------------+------------+--------+--------+------------+-----------------+
; Data Port          ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------------+------------+--------+--------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 10.224 ; 10.224 ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 8.618  ; 8.618  ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 10.224 ; 10.224 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 8.802  ; 8.802  ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 8.383  ; 8.383  ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 8.348  ; 8.348  ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 10.051 ; 10.051 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 9.748  ; 9.748  ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 8.642  ; 8.642  ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 8.219  ; 8.219  ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 8.200  ; 8.200  ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 8.372  ; 8.372  ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 8.642  ; 8.642  ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 10.443 ; 10.443 ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 10.055 ; 10.055 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 9.661  ; 9.661  ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 10.443 ; 10.443 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 9.479  ; 9.479  ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 8.033  ; 8.033  ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 8.033  ; 8.033  ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 8.018  ; 8.018  ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 7.864  ; 7.864  ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 7.537  ; 7.537  ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 7.641  ; 7.641  ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 7.598  ; 7.598  ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 7.876  ; 7.876  ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 7.876  ; 7.876  ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 7.553  ; 7.553  ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 7.003  ; 7.003  ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 7.295  ; 7.295  ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 7.567  ; 7.567  ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 7.590  ; 7.590  ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 7.590  ; 7.590  ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 6.966  ; 6.966  ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 7.319  ; 7.319  ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 7.190  ; 7.190  ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 7.230  ; 7.230  ; Rise       ; clk             ;
+--------------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                    ;
+--------------------+------------+--------+--------+------------+-----------------+
; Data Port          ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------------+------------+--------+--------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 8.348  ; 8.348  ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 8.618  ; 8.618  ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 10.224 ; 10.224 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 8.802  ; 8.802  ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 8.383  ; 8.383  ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 8.348  ; 8.348  ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 10.051 ; 10.051 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 9.748  ; 9.748  ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 8.200  ; 8.200  ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 8.219  ; 8.219  ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 8.200  ; 8.200  ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 8.372  ; 8.372  ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 8.642  ; 8.642  ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 10.055 ; 10.055 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 9.661  ; 9.661  ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 10.443 ; 10.443 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 9.479  ; 9.479  ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 7.537  ; 7.537  ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 8.033  ; 8.033  ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 8.018  ; 8.018  ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 7.864  ; 7.864  ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 7.537  ; 7.537  ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 7.641  ; 7.641  ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 7.598  ; 7.598  ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 7.003  ; 7.003  ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 7.876  ; 7.876  ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 7.553  ; 7.553  ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 7.003  ; 7.003  ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 7.295  ; 7.295  ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 7.567  ; 7.567  ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 6.966  ; 6.966  ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 7.590  ; 7.590  ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 6.966  ; 6.966  ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 7.319  ; 7.319  ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 7.190  ; 7.190  ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 7.230  ; 7.230  ; Rise       ; clk             ;
+--------------------+------------+--------+--------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -0.280 ; -9.595        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.222 ; -103.222              ;
+-------+--------+-----------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                      ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; -0.280 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.304      ;
; -0.280 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.304      ;
; -0.266 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.290      ;
; -0.266 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.290      ;
; -0.266 ; ctrl:controller|OPCODE[0]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.290      ;
; -0.249 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[0]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.296      ;
; -0.249 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[1]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.296      ;
; -0.249 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[2]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.296      ;
; -0.249 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada_rf[3]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.296      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.223 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.159      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[1] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.211 ; ctrl:controller|select_OP[1] ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.249      ;
; -0.208 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.251      ;
; -0.208 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.251      ;
; -0.208 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.251      ;
; -0.208 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.251      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.204 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.140      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[1] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.192 ; ctrl:controller|select_OP[3] ; dp:datapath|alu:alu1|output[3] ; clk          ; clk         ; 1.000        ; 0.006      ; 1.230      ;
; -0.189 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.213      ;
; -0.189 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.213      ;
; -0.184 ; ctrl:controller|state.s3     ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.208      ;
; -0.184 ; ctrl:controller|state.s3     ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.208      ;
; -0.184 ; ctrl:controller|state.s3     ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.208      ;
; -0.183 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.207      ;
; -0.183 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.207      ;
; -0.183 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.207      ;
; -0.179 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.181      ;
; -0.179 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.181      ;
; -0.179 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.181      ;
; -0.179 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out3[3]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.181      ;
; -0.175 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.169      ;
; -0.175 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.169      ;
; -0.175 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[2]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.169      ;
; -0.175 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada_acc[3]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.169      ;
; -0.174 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.168      ;
; -0.174 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.168      ;
; -0.174 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[2]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.168      ;
; -0.174 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_acc[3]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.168      ;
; -0.168 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.192      ;
; -0.168 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 1.000        ; -0.008     ; 1.192      ;
; -0.167 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.210      ;
; -0.167 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.210      ;
; -0.167 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.210      ;
; -0.167 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 1.000        ; 0.011      ; 1.210      ;
; -0.161 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[0]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.185      ;
; -0.161 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[1]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.185      ;
; -0.161 ; ctrl:controller|OPCODE[1]    ; ctrl:controller|imm[3]         ; clk          ; clk         ; 1.000        ; -0.008     ; 1.185      ;
; -0.149 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.143      ;
; -0.149 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.143      ;
; -0.149 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.143      ;
; -0.149 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out3[3]     ; clk          ; clk         ; 1.000        ; -0.038     ; 1.143      ;
; -0.148 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[0]     ; clk          ; clk         ; 1.000        ; 0.022      ; 1.202      ;
; -0.148 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[1]     ; clk          ; clk         ; 1.000        ; 0.022      ; 1.202      ;
; -0.148 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[2]     ; clk          ; clk         ; 1.000        ; 0.022      ; 1.202      ;
; -0.148 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out0[3]     ; clk          ; clk         ; 1.000        ; 0.022      ; 1.202      ;
; -0.143 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[0]     ; clk          ; clk         ; 1.000        ; 0.023      ; 1.198      ;
; -0.143 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[1]     ; clk          ; clk         ; 1.000        ; 0.023      ; 1.198      ;
; -0.143 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[2]     ; clk          ; clk         ; 1.000        ; 0.023      ; 1.198      ;
; -0.143 ; ctrl:controller|select_RF[1] ; dp:datapath|rf:rf1|out2[3]     ; clk          ; clk         ; 1.000        ; 0.023      ; 1.198      ;
; -0.140 ; ctrl:controller|select_OP[1] ; display_hex2[4]~reg0           ; clk          ; clk         ; 1.000        ; -0.013     ; 1.159      ;
; -0.136 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.138      ;
; -0.136 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.138      ;
; -0.136 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.138      ;
; -0.136 ; ctrl:controller|select_RF[0] ; dp:datapath|rf:rf1|out3[3]     ; clk          ; clk         ; 1.000        ; -0.030     ; 1.138      ;
; -0.123 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_rf[0]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.170      ;
; -0.123 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_rf[1]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.170      ;
; -0.123 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_rf[2]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.170      ;
; -0.123 ; ctrl:controller|select_OP[1] ; dp:datapath|entrada_rf[3]      ; clk          ; clk         ; 1.000        ; 0.015      ; 1.170      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.104 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[3]    ; clk          ; clk         ; 1.000        ; -0.096     ; 1.040      ;
; -0.094 ; ctrl:controller|OPCODE[3]    ; ctrl:controller|state.s3       ; clk          ; clk         ; 1.000        ; 0.000      ; 1.126      ;
; -0.093 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 1.000        ; 0.003      ; 1.128      ;
; -0.093 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 1.000        ; 0.003      ; 1.128      ;
; -0.093 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 1.000        ; 0.003      ; 1.128      ;
; -0.093 ; ctrl:controller|enable_RF    ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 1.000        ; 0.003      ; 1.128      ;
; -0.092 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.130      ;
; -0.092 ; ctrl:controller|select_OP[0] ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 1.000        ; 0.006      ; 1.130      ;
+--------+------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                        ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; ctrl:controller|state.done     ; ctrl:controller|state.done     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; ctrl:controller|state.s0       ; ctrl:controller|state.s0       ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; ctrl:controller|select_OP[0]   ; ctrl:controller|select_OP[0]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; ctrl:controller|enable_RF      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.240 ; ctrl:controller|state.s1       ; ctrl:controller|state.s2       ; clk          ; clk         ; 0.000        ; 0.000      ; 0.392      ;
; 0.256 ; ctrl:controller|PC[2]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.408      ;
; 0.262 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.414      ;
; 0.263 ; ctrl:controller|PC[2]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.415      ;
; 0.264 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[1]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.416      ;
; 0.265 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.417      ;
; 0.266 ; ctrl:controller|PC[2]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.418      ;
; 0.274 ; ctrl:controller|state.s0       ; ctrl:controller|state.s1       ; clk          ; clk         ; 0.000        ; 0.082      ; 0.508      ;
; 0.309 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[1]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.461      ;
; 0.310 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.462      ;
; 0.310 ; ctrl:controller|PC[1]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.462      ;
; 0.311 ; ctrl:controller|PC[1]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.463      ;
; 0.312 ; ctrl:controller|PC[1]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.464      ;
; 0.324 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out1[2]     ; clk          ; clk         ; 0.000        ; -0.012     ; 0.464      ;
; 0.332 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out1[0]     ; clk          ; clk         ; 0.000        ; -0.012     ; 0.472      ;
; 0.337 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out1[1]     ; clk          ; clk         ; 0.000        ; -0.012     ; 0.477      ;
; 0.340 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out1[3]     ; clk          ; clk         ; 0.000        ; -0.012     ; 0.480      ;
; 0.362 ; ctrl:controller|state.s3       ; ctrl:controller|imm[3]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.506      ;
; 0.367 ; ctrl:controller|state.s3       ; ctrl:controller|imm[1]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.511      ;
; 0.368 ; ctrl:controller|state.s3       ; ctrl:controller|imm[0]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.512      ;
; 0.378 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.530      ;
; 0.379 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.531      ;
; 0.380 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[3]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.532      ;
; 0.381 ; ctrl:controller|PC[0]          ; ctrl:controller|ADDRESS[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.533      ;
; 0.383 ; ctrl:controller|PC[0]          ; ctrl:controller|OPCODE[0]      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.535      ;
; 0.404 ; dp:datapath|rf:rf1|out3[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.053      ; 0.609      ;
; 0.417 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out0[0]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.568      ;
; 0.418 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out2[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.570      ;
; 0.418 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out0[2]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.569      ;
; 0.418 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out2[2]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.570      ;
; 0.422 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out0[1]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.573      ;
; 0.425 ; ctrl:controller|OPCODE[1]      ; ctrl:controller|select_OP[1]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.577      ;
; 0.425 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out2[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.577      ;
; 0.429 ; dp:datapath|rf:rf1|out1[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.012      ; 0.593      ;
; 0.437 ; ctrl:controller|OPCODE[0]      ; ctrl:controller|select_OP[0]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.589      ;
; 0.438 ; ctrl:controller|ADDRESS[0]     ; ctrl:controller|select_RF[0]   ; clk          ; clk         ; 0.000        ; -0.008     ; 0.582      ;
; 0.439 ; dp:datapath|rf:rf1|out1[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.012      ; 0.603      ;
; 0.445 ; ctrl:controller|PC[2]          ; ctrl:controller|PC[2]          ; clk          ; clk         ; 0.000        ; 0.000      ; 0.597      ;
; 0.452 ; dp:datapath|entrada_acc[0]     ; dp:datapath|acc:acc1|output[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.604      ;
; 0.454 ; dp:datapath|rf:rf1|out2[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.606      ;
; 0.455 ; dp:datapath|alu:alu1|output[0] ; dp:datapath|entrada_rf[0]      ; clk          ; clk         ; 0.000        ; 0.009      ; 0.616      ;
; 0.455 ; dp:datapath|rf:rf1|out3[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.053      ; 0.660      ;
; 0.464 ; dp:datapath|entrada_acc[3]     ; dp:datapath|acc:acc1|output[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.616      ;
; 0.464 ; dp:datapath|rf:rf1|out0[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.001      ; 0.617      ;
; 0.464 ; dp:datapath|rf:rf1|out0[1]     ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.001      ; 0.617      ;
; 0.465 ; dp:datapath|rf:rf1|out2[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.617      ;
; 0.466 ; ctrl:controller|select_OP[0]   ; dp:datapath|entrada2_alu[0]    ; clk          ; clk         ; 0.000        ; 0.006      ; 0.624      ;
; 0.466 ; dp:datapath|rf:rf1|out0[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.001      ; 0.619      ;
; 0.496 ; dp:datapath|entrada_rf[0]      ; dp:datapath|rf:rf1|out3[0]     ; clk          ; clk         ; 0.000        ; -0.053     ; 0.595      ;
; 0.496 ; ctrl:controller|ADDRESS[1]     ; ctrl:controller|imm[1]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.640      ;
; 0.498 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|select_OP[1]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.650      ;
; 0.500 ; ctrl:controller|ADDRESS[3]     ; ctrl:controller|imm[3]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.644      ;
; 0.502 ; dp:datapath|entrada_acc[2]     ; dp:datapath|acc:acc1|output[2] ; clk          ; clk         ; 0.000        ; -0.077     ; 0.577      ;
; 0.502 ; ctrl:controller|select_RF[0]   ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.023      ; 0.677      ;
; 0.506 ; dp:datapath|entrada_rf[1]      ; dp:datapath|rf:rf1|out3[1]     ; clk          ; clk         ; 0.000        ; -0.053     ; 0.605      ;
; 0.510 ; dp:datapath|entrada_rf[2]      ; dp:datapath|rf:rf1|out3[2]     ; clk          ; clk         ; 0.000        ; -0.053     ; 0.609      ;
; 0.510 ; dp:datapath|entrada2_alu[2]    ; dp:datapath|alu:alu1|output[2] ; clk          ; clk         ; 0.000        ; 0.102      ; 0.764      ;
; 0.511 ; ctrl:controller|ADDRESS[3]     ; ctrl:controller|select_RF[1]   ; clk          ; clk         ; 0.000        ; -0.008     ; 0.655      ;
; 0.511 ; dp:datapath|rf:rf1|out0[2]     ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.001      ; 0.664      ;
; 0.513 ; dp:datapath|alu:alu1|output[1] ; dp:datapath|entrada_acc[1]     ; clk          ; clk         ; 0.000        ; -0.044     ; 0.621      ;
; 0.515 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out2[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.667      ;
; 0.515 ; dp:datapath|rf:rf1|out3[0]     ; dp:datapath|rf:rf1|output[0]   ; clk          ; clk         ; 0.000        ; 0.053      ; 0.720      ;
; 0.519 ; dp:datapath|entrada_rf[3]      ; dp:datapath|rf:rf1|out0[3]     ; clk          ; clk         ; 0.000        ; -0.001     ; 0.670      ;
; 0.521 ; ctrl:controller|select_OP[1]   ; display_hex0[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.658      ;
; 0.521 ; dp:datapath|rf:rf1|out3[3]     ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.053      ; 0.726      ;
; 0.526 ; ctrl:controller|OPCODE[1]      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.678      ;
; 0.527 ; ctrl:controller|select_OP[3]   ; display_hex3[2]~reg0           ; clk          ; clk         ; 0.000        ; -0.038     ; 0.641      ;
; 0.529 ; ctrl:controller|select_OP[3]   ; display_hex3[0]~reg0           ; clk          ; clk         ; 0.000        ; -0.038     ; 0.643      ;
; 0.532 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|select_OP[3]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.684      ;
; 0.535 ; dp:datapath|acc:acc1|output[2] ; dp:datapath|entrada2_alu[2]    ; clk          ; clk         ; 0.000        ; 0.019      ; 0.706      ;
; 0.538 ; dp:datapath|entrada2_alu[0]    ; dp:datapath|alu:alu1|output[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.690      ;
; 0.539 ; ctrl:controller|imm[0]         ; dp:datapath|entrada1_alu[0]    ; clk          ; clk         ; 0.000        ; 0.014      ; 0.705      ;
; 0.544 ; dp:datapath|alu:alu1|output[2] ; dp:datapath|entrada_rf[2]      ; clk          ; clk         ; 0.000        ; 0.009      ; 0.705      ;
; 0.545 ; dp:datapath|entrada_acc[1]     ; dp:datapath|acc:acc1|output[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.697      ;
; 0.547 ; ctrl:controller|OPCODE[3]      ; ctrl:controller|enable_RF      ; clk          ; clk         ; 0.000        ; 0.000      ; 0.699      ;
; 0.551 ; ctrl:controller|select_OP[1]   ; display_hex1[5]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.688      ;
; 0.552 ; ctrl:controller|state.s2       ; ctrl:controller|PC[1]          ; clk          ; clk         ; 0.000        ; 0.013      ; 0.717      ;
; 0.552 ; dp:datapath|alu:alu1|output[3] ; dp:datapath|entrada_rf[3]      ; clk          ; clk         ; 0.000        ; 0.009      ; 0.713      ;
; 0.554 ; ctrl:controller|select_OP[1]   ; display_hex1[4]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.691      ;
; 0.558 ; ctrl:controller|select_OP[1]   ; display_hex1[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.695      ;
; 0.560 ; ctrl:controller|select_OP[1]   ; display_hex1[0]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.697      ;
; 0.562 ; ctrl:controller|state.s2       ; ctrl:controller|state.s3       ; clk          ; clk         ; 0.000        ; 0.013      ; 0.727      ;
; 0.564 ; ctrl:controller|OPCODE[0]      ; ctrl:controller|state.done     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.716      ;
; 0.569 ; ctrl:controller|select_RF[1]   ; dp:datapath|rf:rf1|output[1]   ; clk          ; clk         ; 0.000        ; 0.023      ; 0.744      ;
; 0.570 ; ctrl:controller|select_RF[1]   ; dp:datapath|rf:rf1|output[3]   ; clk          ; clk         ; 0.000        ; 0.023      ; 0.745      ;
; 0.573 ; ctrl:controller|select_RF[0]   ; dp:datapath|rf:rf1|output[2]   ; clk          ; clk         ; 0.000        ; 0.023      ; 0.748      ;
; 0.574 ; ctrl:controller|state.s2       ; ctrl:controller|PC[0]          ; clk          ; clk         ; 0.000        ; 0.013      ; 0.739      ;
; 0.577 ; ctrl:controller|ADDRESS[0]     ; ctrl:controller|imm[0]         ; clk          ; clk         ; 0.000        ; -0.008     ; 0.721      ;
; 0.581 ; ctrl:controller|select_OP[3]   ; display_hex3[5]~reg0           ; clk          ; clk         ; 0.000        ; -0.013     ; 0.720      ;
; 0.586 ; ctrl:controller|select_OP[3]   ; display_hex0[3]~reg0           ; clk          ; clk         ; 0.000        ; -0.015     ; 0.723      ;
; 0.589 ; dp:datapath|alu:alu1|output[0] ; dp:datapath|entrada_acc[0]     ; clk          ; clk         ; 0.000        ; -0.044     ; 0.697      ;
; 0.589 ; ctrl:controller|imm[1]         ; dp:datapath|entrada1_alu[1]    ; clk          ; clk         ; 0.000        ; -0.088     ; 0.653      ;
; 0.592 ; ctrl:controller|imm[0]         ; dp:datapath|entrada1_alu[2]    ; clk          ; clk         ; 0.000        ; -0.088     ; 0.656      ;
; 0.592 ; ctrl:controller|select_OP[0]   ; dp:datapath|entrada2_alu[3]    ; clk          ; clk         ; 0.000        ; -0.096     ; 0.648      ;
; 0.593 ; dp:datapath|alu:alu1|output[1] ; conversor_hex4[3]~reg0         ; clk          ; clk         ; 0.000        ; -0.101     ; 0.644      ;
; 0.593 ; dp:datapath|alu:alu1|output[1] ; conversor_hex4[6]~reg0         ; clk          ; clk         ; 0.000        ; -0.101     ; 0.644      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                         ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[1]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[1]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[2]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[2]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex4[6]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex4[6]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[0]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[3]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[4]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; conversor_hex5[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; conversor_hex5[5]~reg0       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|enable_RF    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|enable_RF    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|imm[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|imm[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_OP[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_OP[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_RF[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_RF[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|select_RF[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|select_RF[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.done   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.done   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s0     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s0     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s1     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s1     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s2     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s2     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.s3     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.s3     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex0[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex0[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[3]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[4]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex1[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex1[5]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[0]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[1]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; display_hex2[2]~reg0         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; display_hex2[3]~reg0         ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; rst       ; clk        ; 0.718 ; 0.718 ; Rise       ; clk             ;
; start     ; clk        ; 2.644 ; 2.644 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst       ; clk        ; 0.381  ; 0.381  ; Rise       ; clk             ;
; start     ; clk        ; -2.324 ; -2.324 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Clock to Output Times                                                          ;
+--------------------+------------+-------+-------+------------+-----------------+
; Data Port          ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------------+------------+-------+-------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 5.325 ; 5.325 ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 4.550 ; 4.550 ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 5.325 ; 5.325 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 4.595 ; 4.595 ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 4.443 ; 4.443 ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 4.423 ; 4.423 ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 5.227 ; 5.227 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 5.133 ; 5.133 ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 4.534 ; 4.534 ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 4.351 ; 4.351 ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 4.329 ; 4.329 ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 4.398 ; 4.398 ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 4.534 ; 4.534 ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 5.315 ; 5.315 ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 5.222 ; 5.222 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 5.116 ; 5.116 ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 5.315 ; 5.315 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 4.598 ; 4.598 ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 4.983 ; 4.983 ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 4.560 ; 4.560 ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 4.215 ; 4.215 ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 4.215 ; 4.215 ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 4.076 ; 4.076 ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 3.935 ; 3.935 ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 3.997 ; 3.997 ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 3.968 ; 3.968 ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 4.097 ; 4.097 ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 4.097 ; 4.097 ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 3.924 ; 3.924 ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 3.956 ; 3.956 ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 3.738 ; 3.738 ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 3.841 ; 3.841 ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 3.952 ; 3.952 ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 3.961 ; 3.961 ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 3.926 ; 3.926 ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 3.961 ; 3.961 ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 3.702 ; 3.702 ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 3.850 ; 3.850 ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 3.805 ; 3.805 ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 3.790 ; 3.790 ; Rise       ; clk             ;
+--------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                  ;
+--------------------+------------+-------+-------+------------+-----------------+
; Data Port          ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------------+------------+-------+-------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 4.423 ; 4.423 ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 4.550 ; 4.550 ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 5.325 ; 5.325 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 4.595 ; 4.595 ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 4.443 ; 4.443 ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 4.423 ; 4.423 ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 5.227 ; 5.227 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 5.133 ; 5.133 ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 4.329 ; 4.329 ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 4.351 ; 4.351 ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 4.329 ; 4.329 ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 4.398 ; 4.398 ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 4.534 ; 4.534 ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 4.560 ; 4.560 ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 5.222 ; 5.222 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 5.116 ; 5.116 ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 5.315 ; 5.315 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 4.598 ; 4.598 ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 4.983 ; 4.983 ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 4.560 ; 4.560 ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 3.935 ; 3.935 ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 4.215 ; 4.215 ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 4.076 ; 4.076 ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 3.935 ; 3.935 ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 3.997 ; 3.997 ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 3.968 ; 3.968 ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 3.738 ; 3.738 ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 4.097 ; 4.097 ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 3.924 ; 3.924 ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 3.956 ; 3.956 ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 3.738 ; 3.738 ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 3.841 ; 3.841 ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 3.952 ; 3.952 ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 3.702 ; 3.702 ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 3.926 ; 3.926 ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 3.961 ; 3.961 ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 3.702 ; 3.702 ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 3.850 ; 3.850 ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 3.805 ; 3.805 ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 3.790 ; 3.790 ; Rise       ; clk             ;
+--------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -1.674   ; 0.215 ; N/A      ; N/A     ; -1.222              ;
;  clk             ; -1.674   ; 0.215 ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -114.106 ; 0.0   ; 0.0      ; 0.0     ; -103.222            ;
;  clk             ; -114.106 ; 0.000 ; N/A      ; N/A     ; -103.222            ;
+------------------+----------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; rst       ; clk        ; 1.609 ; 1.609 ; Rise       ; clk             ;
; start     ; clk        ; 4.620 ; 4.620 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst       ; clk        ; 0.534  ; 0.534  ; Rise       ; clk             ;
; start     ; clk        ; -2.324 ; -2.324 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------------+
; Clock to Output Times                                                            ;
+--------------------+------------+--------+--------+------------+-----------------+
; Data Port          ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------------+------------+--------+--------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 10.224 ; 10.224 ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 8.618  ; 8.618  ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 10.224 ; 10.224 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 8.802  ; 8.802  ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 8.383  ; 8.383  ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 8.348  ; 8.348  ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 10.051 ; 10.051 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 9.748  ; 9.748  ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 8.642  ; 8.642  ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 8.219  ; 8.219  ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 8.200  ; 8.200  ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 8.372  ; 8.372  ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 8.642  ; 8.642  ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 10.443 ; 10.443 ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 10.055 ; 10.055 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 9.661  ; 9.661  ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 10.443 ; 10.443 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 9.479  ; 9.479  ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 8.608  ; 8.608  ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 8.033  ; 8.033  ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 8.033  ; 8.033  ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 8.018  ; 8.018  ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 7.864  ; 7.864  ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 7.537  ; 7.537  ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 7.641  ; 7.641  ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 7.598  ; 7.598  ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 7.876  ; 7.876  ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 7.876  ; 7.876  ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 7.553  ; 7.553  ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 7.003  ; 7.003  ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 7.295  ; 7.295  ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 7.567  ; 7.567  ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 7.590  ; 7.590  ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 7.534  ; 7.534  ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 7.590  ; 7.590  ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 6.966  ; 6.966  ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 7.319  ; 7.319  ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 7.190  ; 7.190  ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 7.230  ; 7.230  ; Rise       ; clk             ;
+--------------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                  ;
+--------------------+------------+-------+-------+------------+-----------------+
; Data Port          ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------------+------------+-------+-------+------------+-----------------+
; conversor_hex4[*]  ; clk        ; 4.423 ; 4.423 ; Rise       ; clk             ;
;  conversor_hex4[0] ; clk        ; 4.550 ; 4.550 ; Rise       ; clk             ;
;  conversor_hex4[1] ; clk        ; 5.325 ; 5.325 ; Rise       ; clk             ;
;  conversor_hex4[2] ; clk        ; 4.595 ; 4.595 ; Rise       ; clk             ;
;  conversor_hex4[3] ; clk        ; 4.443 ; 4.443 ; Rise       ; clk             ;
;  conversor_hex4[4] ; clk        ; 4.423 ; 4.423 ; Rise       ; clk             ;
;  conversor_hex4[5] ; clk        ; 5.227 ; 5.227 ; Rise       ; clk             ;
;  conversor_hex4[6] ; clk        ; 5.133 ; 5.133 ; Rise       ; clk             ;
; conversor_hex5[*]  ; clk        ; 4.329 ; 4.329 ; Rise       ; clk             ;
;  conversor_hex5[0] ; clk        ; 4.351 ; 4.351 ; Rise       ; clk             ;
;  conversor_hex5[3] ; clk        ; 4.329 ; 4.329 ; Rise       ; clk             ;
;  conversor_hex5[4] ; clk        ; 4.398 ; 4.398 ; Rise       ; clk             ;
;  conversor_hex5[5] ; clk        ; 4.534 ; 4.534 ; Rise       ; clk             ;
; display_hex0[*]    ; clk        ; 4.560 ; 4.560 ; Rise       ; clk             ;
;  display_hex0[0]   ; clk        ; 5.222 ; 5.222 ; Rise       ; clk             ;
;  display_hex0[1]   ; clk        ; 5.116 ; 5.116 ; Rise       ; clk             ;
;  display_hex0[2]   ; clk        ; 5.315 ; 5.315 ; Rise       ; clk             ;
;  display_hex0[3]   ; clk        ; 4.598 ; 4.598 ; Rise       ; clk             ;
;  display_hex0[4]   ; clk        ; 4.983 ; 4.983 ; Rise       ; clk             ;
;  display_hex0[5]   ; clk        ; 4.560 ; 4.560 ; Rise       ; clk             ;
; display_hex1[*]    ; clk        ; 3.935 ; 3.935 ; Rise       ; clk             ;
;  display_hex1[0]   ; clk        ; 4.215 ; 4.215 ; Rise       ; clk             ;
;  display_hex1[1]   ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  display_hex1[2]   ; clk        ; 4.076 ; 4.076 ; Rise       ; clk             ;
;  display_hex1[3]   ; clk        ; 3.935 ; 3.935 ; Rise       ; clk             ;
;  display_hex1[4]   ; clk        ; 3.997 ; 3.997 ; Rise       ; clk             ;
;  display_hex1[5]   ; clk        ; 3.968 ; 3.968 ; Rise       ; clk             ;
; display_hex2[*]    ; clk        ; 3.738 ; 3.738 ; Rise       ; clk             ;
;  display_hex2[0]   ; clk        ; 4.097 ; 4.097 ; Rise       ; clk             ;
;  display_hex2[1]   ; clk        ; 3.924 ; 3.924 ; Rise       ; clk             ;
;  display_hex2[2]   ; clk        ; 3.956 ; 3.956 ; Rise       ; clk             ;
;  display_hex2[3]   ; clk        ; 3.738 ; 3.738 ; Rise       ; clk             ;
;  display_hex2[4]   ; clk        ; 3.841 ; 3.841 ; Rise       ; clk             ;
;  display_hex2[5]   ; clk        ; 3.952 ; 3.952 ; Rise       ; clk             ;
; display_hex3[*]    ; clk        ; 3.702 ; 3.702 ; Rise       ; clk             ;
;  display_hex3[0]   ; clk        ; 3.926 ; 3.926 ; Rise       ; clk             ;
;  display_hex3[1]   ; clk        ; 3.961 ; 3.961 ; Rise       ; clk             ;
;  display_hex3[2]   ; clk        ; 3.702 ; 3.702 ; Rise       ; clk             ;
;  display_hex3[3]   ; clk        ; 3.850 ; 3.850 ; Rise       ; clk             ;
;  display_hex3[4]   ; clk        ; 3.805 ; 3.805 ; Rise       ; clk             ;
;  display_hex3[5]   ; clk        ; 3.790 ; 3.790 ; Rise       ; clk             ;
+--------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 456      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 456      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 2     ; 2    ;
; Unconstrained Input Port Paths  ; 88    ; 88   ;
; Unconstrained Output Ports      ; 35    ; 35   ;
; Unconstrained Output Port Paths ; 35    ; 35   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Mon Jul 02 16:03:09 2018
Info: Command: quartus_sta cpu -c cpu
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'cpu.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.674
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.674      -114.106 clk 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222      -103.222 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.280
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.280        -9.595 clk 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222      -103.222 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 404 megabytes
    Info: Processing ended: Mon Jul 02 16:03:10 2018
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


